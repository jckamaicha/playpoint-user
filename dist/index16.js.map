{"version":3,"file":"index16.js","sources":["../src/pages/challenges/index.jsx"],"sourcesContent":["import { Skeleton } from \"@mui/material\";\nimport moment from \"moment/moment\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRPCContext } from \"../../contexts/WalletRPC/RPCContext\";\nimport GetFlags from \"../../utils/GetFlags\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./styles/style.css\";\n\nconst Challenges = () => {\n  const [_challenges, setChalleneges] = React.useState([]);\n  const [prop, setActiveProp] = React.useState(\"\");\n  const [temp, setTemp] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const { t } = useTranslation();\n\n  const [tabBtn, setTabBtn] = React.useState(`${t(\"all\")}`);\n  const navigate = useNavigate();\n  const [{ userPublicAddress, username, isWalletConnected }, dispatchRPCData] =\n    useRPCContext();\n\n  React.useEffect(() => {\n    (async () => {\n      const data = await (\n        await import(\"../../api/Challenge\")\n      ).getAllChallenge();\n      setChalleneges(data.data.reverse());\n      setLoading(false);\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    if (_challenges.length > 0) {\n      setTemp(_challenges);\n    }\n  }, [_challenges]);\n\n  React.useEffect(() => {\n    let _temp = [];\n    if (prop == `${t(\"all\")}`) {\n      setTemp(_challenges);\n    }\n    if (prop == `${t(\"duo\")}`) {\n      _temp = _challenges.filter((_challenge) => _challenge.type == \"duo\");\n      setTemp(_temp);\n    }\n    if (prop == `${t(\"trio\")}`) {\n      _temp = _challenges.filter((_challenge) => _challenge.type == \"trio\");\n      setTemp(_temp);\n    }\n    if (prop == `${t(\"filled\")}`) {\n      _temp = _challenges.filter(\n        (_challenge) => _challenge.slot == _challenge.participants.length\n      );\n      setTemp(_temp);\n    }\n    if (prop == `${t(\"unfilled\")}`) {\n      _temp = _challenges.filter(\n        (_challenge) => _challenge.slot > _challenge.participants.length\n      );\n      setTemp(_temp);\n    }\n    if (prop == `${t(\"my challenges\")}`) {\n      _temp = _challenges.filter(\n        (_challenge) => _challenge.owner.walletID == userPublicAddress\n      );\n      setTemp(_temp);\n    }\n  }, [prop]);\n\n  return (\n    <div className=\"challenges__Container\">\n      <div className=\"challenges__AllChallenges\">\n        <div className=\"filters\">\n          {[\n            `${t(\"all\")}`,\n            `${t(\"duo\")}`,\n            `${t(\"trio\")}`,\n            `${t(\"filled\")}`,\n            `${t(\"unfilled\")}`,\n          ].map((button, index) => {\n            return (\n              <button\n                key={index}\n                onClick={() => {\n                  setTabBtn(button), setActiveProp(button);\n                }}\n                className={button === tabBtn ? \"active\" : \"\"}\n              >\n                {button}\n              </button>\n            );\n          })}\n          {isWalletConnected && (\n            <button\n              onClick={() => {\n                setActiveProp(\"my challenges\"), setTabBtn(\"my challenges\");\n              }}\n              className={tabBtn === \"my challenges\" ? \"active\" : \"\"}\n            >\n              {t(\"My Challenges\")}\n            </button>\n          )}\n        </div>\n        <div className=\"cardContainer\">\n          {!loading && temp.length > 0\n            ? temp.map((challenge, key) => {\n                return (\n                  <div\n                    key={key}\n                    className=\"card\"\n                    onClick={() =>\n                      navigate(`/prediction/${challenge.predictionId._id}`)\n                    }\n                  >\n                    <div className=\"cardHeader\">\n                      {loading ? (\n                        <>\n                          <Skeleton animation=\"wave\" width={150} height={50} />\n                          <Skeleton animation=\"wave\" width={100} height={50} />\n                        </>\n                      ) : (\n                        <>\n                          <h2>ID: #{challenge._id.slice(5, 10)}</h2>\n                          <span className={challenge.type}>\n                            {challenge.type}\n                          </span>\n                        </>\n                      )}\n                    </div>\n\n                    <div className=\"predictedBy\">\n                      <img\n                        src={`https://robohash.org/${\n                          challenge.owner.username || \"_0\"\n                        }`}\n                        loading=\"lazy\"\n                        height={\"40\"}\n                        width={\"40\"}\n                      />\n                      <p className=\"pp__flex1\">{challenge.owner.username}</p>\n                      <p>\n                        <em>owner</em>\n                      </p>\n                    </div>\n                    <div className=\"fixture\">\n                      <p>\n                        {GetFlags(\n                          challenge.fixtureId.marketplaceSlug,\n                          challenge.fixtureId.HomeTeam\n                        )}\n                        {challenge.fixtureId.HomeTeam}\n                      </p>\n\n                      <p>{\" - \"}</p>\n                      <p>\n                        {GetFlags(\n                          challenge.fixtureId.marketplaceSlug,\n                          challenge.fixtureId.AwayTeam\n                        )}\n                        {challenge.fixtureId.AwayTeam}\n                      </p>\n                    </div>\n                    <div className=\"stat\">\n                      <p className=\"amount\">{challenge.amount / 0.02}PPTT</p>\n\n                      <p className=\"filled\">\n                        {challenge.participants.length} of {challenge.slot}{\" \"}\n                        Slots\n                      </p>\n                    </div>\n\n                    <p>{moment(challenge.created_at).fromNow()}</p>\n                  </div>\n                );\n              })\n            : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((challenge, index) => {\n                return (\n                  <div className=\"card\" key={index}>\n                    <div className=\"card__header\">\n                      <Skeleton width={150} height={50} />\n                      <Skeleton width={100} height={50} />\n                    </div>\n                    <div>\n                      <div className=\"card_image\">\n                        <div>\n                          <Skeleton\n                            animation=\"wave\"\n                            variant=\"circular\"\n                            width={30}\n                            height={30}\n                          />\n                          <Skeleton width={70} height={50} />\n                        </div>\n                        <Skeleton width={50} height={50} />\n                      </div>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        gap: \"5px\",\n                      }}\n                    >\n                      <Skeleton width={30} height={50} />\n                      <Skeleton width={60} height={50} />\n                      -\n                      <Skeleton width={30} height={50} />\n                      <Skeleton width={60} height={50} />\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <Skeleton width={90} height={50} />\n                      <Skeleton width={60} height={50} />\n                    </div>\n                    <Skeleton width={70} height={50} />\n                  </div>\n                );\n              })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Challenges;\n"],"names":["Challenges","_challenges","setChalleneges","React","prop","setActiveProp","temp","setTemp","loading","setLoading","t","useTranslation","tabBtn","setTabBtn","navigate","useNavigate","userPublicAddress","username","isWalletConnected","dispatchRPCData","useRPCContext","data","_temp","_challenge","jsxs","button","index","jsx","challenge","key","Fragment","Skeleton","GetFlags","moment"],"mappings":"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"}