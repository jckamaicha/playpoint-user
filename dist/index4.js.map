{"version":3,"file":"index4.js","sources":["../src/components/WalletSelection/index.jsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { ethers } from \"ethers\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useRPCContext } from \"../../contexts/WalletRPC/RPCContext\";\nimport { ACTIONS } from \"../../contexts/WalletRPC/RPCReducer\";\nimport ERC20BasicAPI from \"../../utils/ERC20BasicABI.json\";\nimport { handleRPCWalletLogin, handleTRONWALLETLogin } from \"../../utils/RPC\";\nimport \"./styles/style.css\";\n\nexport default function WalletSelection({ setIsAuthenticationDrawerOpen }) {\n\n  const navigate = useNavigate()\n  const [\n    { isWalletConnected, username, userPublicAddress, network },\n    dispatchRPCData,\n  ] = useRPCContext();\n  const [loading, setLoading] = React.useState(false);\n\n  const handleWalletDrawer = () => {\n    setIsAuthenticationDrawerOpen(false);\n    document.body.style.overflowY = \"scroll\";\n  };\n\n  const handleWalletLogin = async (network) => {\n    if (network === \"arbitrum\") {\n      setLoading(true);\n      const resData = await handleRPCWalletLogin();\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const contract = new ethers.Contract(\n        import.meta.env.VITE_BETA_PPTT_CONTRACT_ADDRESS,\n        ERC20BasicAPI,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(resData.userPublicAddress);\n      const PPTTBalance = await contract.balanceOf(resData.userPublicAddress);\n\n      const data = {\n        ...resData,\n        userPPTTBalance: ethers.utils.formatEther(PPTTBalance),\n        userETHBalance: ethers.utils.formatEther(ethBalance),\n        isNonWalletUser:false,\n      };\n\n      localStorage.setItem(\"rpcUserData\", JSON.stringify(resData));\n\n      await dispatchRPCData({ type: ACTIONS.WALLET_CONNECT, payload: data });\n      toast(\"Wallet Connected!\");\n      handleWalletDrawer();\n      setLoading(false);\n    }\n\n    if (network === \"shasta\") {\n      setLoading(true);\n      const data = await handleTRONWALLETLogin();\n      if(data.isWalletConnected){\n      localStorage.setItem(\"rpcUserData\", JSON.stringify(data));\n        await dispatchRPCData({ type: ACTIONS.WALLET_CONNECT, payload: data });\n        handleWalletDrawer();\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"walletSelection__container\">\n      <div className=\"walletSelectionItems__container\">\n        <div className=\"header\">\n          <h2>Authentication Methods</h2>\n          <Button onClick={() => handleWalletDrawer()}>‚ùå</Button>\n        </div>\n\n        <p>Choose any one option from below.</p>\n\n        <div className=\"wallets\">\n          <Button onClick={() => handleWalletLogin(\"arbitrum\")}>\n            ü¶ä Metamask\n          </Button>\n          <Button onClick={() => handleWalletLogin(\"shasta\")}>\n            üëõ TronLink\n          </Button>\n          <Button onClick={() => {handleWalletDrawer(), navigate(\"/signin\")}}>\n            ‚úâÔ∏è Email\n          </Button>\n        </div>\n\n        <p>\n          ‚ö†Ô∏è We don't redirect the page, except sign in request to wallet for\n          wallet authentication. Beware of phising attacks.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":["WalletSelection","setIsAuthenticationDrawerOpen","navigate","useNavigate","isWalletConnected","username","userPublicAddress","network","dispatchRPCData","useRPCContext","loading","setLoading","React","handleWalletDrawer","handleWalletLogin","resData","handleRPCWalletLogin","provider","ethers.providers.Web3Provider","contract","ethers.Contract","ERC20BasicAPI","ethBalance","PPTTBalance","data","ethers.utils.formatEther","ACTIONS","toast","handleTRONWALLETLogin","jsxs","jsx","Button"],"mappings":"8WAWwB,SAAAA,EAAgB,CAAE,8BAAAC,GAAiC,CAEzE,MAAMC,EAAWC,IACX,CACJ,CAAE,kBAAAC,EAAmB,SAAAC,EAAU,kBAAAC,EAAmB,QAAAC,CAAQ,EAC1DC,GACEC,EAAc,EACZ,CAACC,EAASC,CAAU,EAAIC,EAAM,SAAS,EAAK,EAE5CC,EAAqB,IAAM,CAC/BZ,EAA8B,EAAK,EAC1B,SAAA,KAAK,MAAM,UAAY,QAAA,EAG5Ba,EAAoB,MAAOP,GAAY,CAC3C,GAAIA,IAAY,WAAY,CAC1BI,EAAW,EAAI,EACT,MAAAI,EAAU,MAAMC,IAChBC,EAAW,IAAIC,EAA8B,QAAQ,EACrDC,EAAW,IAAIC,EACnB,6CACAC,EACAJ,CAAA,EAGIK,EAAa,MAAML,EAAS,WAAWF,EAAQ,iBAAiB,EAChEQ,EAAc,MAAMJ,EAAS,UAAUJ,EAAQ,iBAAiB,EAEhES,EAAO,CACX,GAAGT,EACH,gBAAiBU,EAAyBF,CAAW,EACrD,eAAgBE,EAAyBH,CAAU,EACnD,gBAAgB,EAAA,EAGlB,aAAa,QAAQ,cAAe,KAAK,UAAUP,CAAO,CAAC,EAE3D,MAAMP,EAAgB,CAAE,KAAMkB,EAAQ,eAAgB,QAASF,EAAM,EACrEG,EAAM,mBAAmB,EACNd,IACnBF,EAAW,EAAK,CAClB,CAEA,GAAIJ,IAAY,SAAU,CACxBI,EAAW,EAAI,EACT,MAAAa,EAAO,MAAMI,IAChBJ,EAAK,oBACR,aAAa,QAAQ,cAAe,KAAK,UAAUA,CAAI,CAAC,EACtD,MAAMhB,EAAgB,CAAE,KAAMkB,EAAQ,eAAgB,QAASF,EAAM,EAClDX,IACnBF,EAAW,EAAK,EAEpB,CAAA,EAGF,SACG,MAAI,CAAA,UAAU,6BACb,SAACkB,EAAA,MAAA,CAAI,UAAU,kCACb,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAAAC,EAAC,MAAG,SAAsB,wBAAA,CAAA,IACzBC,EAAO,CAAA,QAAS,IAAMlB,IAAsB,SAAC,IAAA,CAAA,EAChD,EAEAiB,EAAC,KAAE,SAAiC,mCAAA,CAAA,EAEpCD,EAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAAAC,EAACC,GAAO,QAAS,IAAMjB,EAAkB,UAAU,EAAG,SAEtD,cAAA,IACCiB,EAAO,CAAA,QAAS,IAAMjB,EAAkB,QAAQ,EAAG,SAEpD,cAAA,EACAgB,EAACC,EAAO,CAAA,QAAS,IAAM,CAAoBlB,EAAA,EAAGX,EAAS,SAAS,CAAA,EAAI,SAEpE,WAAA,CAAA,EACF,EAEA4B,EAAC,KAAE,SAGH,uHAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}