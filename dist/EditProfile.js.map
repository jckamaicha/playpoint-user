{"version":3,"file":"EditProfile.js","sources":["../src/components/EditProfile/EditProfile.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./styles/style.css\";\nimport { useRPCContext } from \"../../contexts/WalletRPC/RPCContext\";\nimport { setProfile } from \"../../api/Profile\";\nimport { ACTIONS } from \"../../contexts/WalletRPC/RPCReducer\";\n\nconst EditProfile = () => {\n  const [selectedImage, setSelectedImage] = React.useState(null);\n  const [{ userPublicAddress, username, isWalletConnected }, dispatchRPCData] =\n    useRPCContext();\n  const [_username, setUsername] = React.useState(username);\n\n  const handleUpdate = async () => {\n    await setProfile({ data: { username: _username, userPublicAddress } }).then(\n      (res) => {\n        const rpcUserData = {\n          isWalletConnected: true,\n          userPublicAddress: userPublicAddress,\n          username: _username,\n        };\n        localStorage.setItem(\"rpcUserData\", JSON.stringify(rpcUserData));\n      }\n    );\n    dispatchRPCData({\n      type: ACTIONS.UPDATE_USERNAME,\n      payload: { username: _username },\n    });\n  };\n\n  return (\n    <div className=\"editprofile__container\">\n      <div className=\"editusername\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          placeholder=\"Enter your username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n      <div className=\"editProfile\">\n        <label htmlFor=\"profileimage\">Choose a profile Image</label>\n        {selectedImage && (\n          <div className=\"profile\">\n            <img\n              src={`${URL.createObjectURL(selectedImage)}`}\n              onLoad={URL.revokeObjectURL(selectedImage)}\n              alt=\"profile_image\"\n            />\n            <br />\n            <button\n              onClick={() => {\n                setSelectedImage(null);\n              }}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => setSelectedImage(e.target.files[0])}\n          id=\"profileimage\"\n        />\n      </div>\n      <div className=\"buttons\">\n        <button className=\"cancel\">cancel</button>\n        <button className=\"save\" onClick={handleUpdate}>\n          save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditProfile;\n"],"names":["EditProfile","selectedImage","setSelectedImage","React","userPublicAddress","username","isWalletConnected","dispatchRPCData","useRPCContext","_username","setUsername","handleUpdate","setProfile","res","rpcUserData","ACTIONS","jsxs","jsx","e"],"mappings":"6GAMA,MAAMA,EAAc,IAAM,CACxB,KAAM,CAACC,EAAeC,CAAgB,EAAIC,EAAM,SAAS,IAAI,EACvD,CAAC,CAAE,kBAAAC,EAAmB,SAAAC,EAAU,kBAAAC,GAAqBC,CAAe,EACxEC,IACI,CAACC,EAAWC,CAAW,EAAIP,EAAM,SAASE,CAAQ,EAElDM,EAAe,SAAY,CACzB,MAAAC,EAAW,CAAE,KAAM,CAAE,SAAUH,EAAW,kBAAAL,CAAA,CAAqB,CAAA,EAAE,KACpES,GAAQ,CACP,MAAMC,EAAc,CAClB,kBAAmB,GACnB,kBAAAV,EACA,SAAUK,CAAA,EAEZ,aAAa,QAAQ,cAAe,KAAK,UAAUK,CAAW,CAAC,CACjE,CAAA,EAEcP,EAAA,CACd,KAAMQ,EAAQ,gBACd,QAAS,CAAE,SAAUN,CAAU,CAAA,CAChC,CAAA,EAID,OAAAO,EAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACC,EAAA,QAAA,CAAM,QAAQ,WAAW,SAAQ,WAAA,EAClCA,EAAC,QAAA,CACC,KAAK,OACL,GAAG,WACH,YAAY,sBACZ,SAAWC,GAAMR,EAAYQ,EAAE,OAAO,KAAK,CAAA,CAC7C,CAAA,EACF,EACAF,EAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACC,EAAA,QAAA,CAAM,QAAQ,eAAe,SAAsB,yBAAA,EACnDhB,GACCe,EAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAAAC,EAAC,MAAA,CACC,IAAK,GAAG,IAAI,gBAAgBhB,CAAa,IACzC,OAAQ,IAAI,gBAAgBA,CAAa,EACzC,IAAI,eAAA,CACN,IACC,KAAG,EAAA,EACJgB,EAAC,SAAA,CACC,QAAS,IAAM,CACbf,EAAiB,IAAI,CACvB,EACD,SAAA,QAAA,CAED,CAAA,EACF,EAGFe,EAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAWC,GAAMhB,EAAiBgB,EAAE,OAAO,MAAM,CAAC,CAAC,EACnD,GAAG,cAAA,CACL,CAAA,EACF,EACAF,EAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACC,EAAA,SAAA,CAAO,UAAU,SAAS,SAAM,SAAA,IAChC,SAAO,CAAA,UAAU,OAAO,QAASN,EAAc,SAEhD,OAAA,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}