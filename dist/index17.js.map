{"version":3,"file":"index17.js","sources":["../src/api/Auth.js","../src/pages/SignIn/index.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const authenticate = (data) => {\n    var res = axios.post(\n      import.meta.env.VITE_API_URI + `api/v1/authenticate`,\n      data\n    );\n    return res;\n};\n\nexport const _verify = async (data) => {\n    var res = await axios.post(\n      import.meta.env.VITE_API_URI + `api/v1/verify`,\n      data\n    );\n    return res;\n};\n\nexport const otplogin = (data) => {\n    var res = axios.post(\n      import.meta.env.VITE_API_URI + `api/v1/otplogin`,\n      data\n    );\n    return res;\n};\n\n","import React from \"react\";\nimport \"./styles/style.css\";\nimport { authenticate, otplogin, _verify } from \"../../api/Auth\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport Pusher from \"pusher-js\";\nimport { useRPCContext } from \"../../contexts/WalletRPC/RPCContext\";\nimport loader from \"../../helpers/loading.gif\";\nconst SignIn = () => {\n  const navigate = useNavigate();\n  const [active, setActive] = React.useState(false);\n  const [inputvalue, setInputValue] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [_activeInput, setActiveInput] = React.useState(-1);\n  const [verifying, setVerifying] = React.useState(false);\n  const [variant, setVariant] = React.useState(\"\");\n  const [, dispatchRPCData] = useRPCContext();\n  const [_loading, setLoading_] = React.useState(false);\n  const pusher = new Pusher(\"e6640b48a82cccbb13d0\", {\n    cluster: \"ap2\",\n  });\n\n  React.useEffect(() => {\n    // Enable pusher logging - don't include this in production\n    // Pusher.logToConsole = true;\n    pusher.connection.bind(\"connected\", function () {\n      console.log(\"Weboscket Connected\");\n    });\n  }, []);\n\n  const ValidateEmail = (mail) => {\n    if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        mail\n      )\n    ) {\n      return true;\n    }\n    toast(\"You have entered an invalid email address!\", { type: \"error\" });\n    return false;\n  };\n\n  const handleSignIn = async () => {\n    setLoading_(true);\n    if (ValidateEmail(email)) {\n      await authenticate({ email }).then((res) => {\n        toast(res.data.msg);\n        if (\n          String(res.data.msg).trim() !=\n          \"You have just reqested for the OTP. please verify or try after a moment\"\n        ) {\n          console.log(res.data.msg);\n          setVariant(res.data.variant);\n          setActive(true);\n        }\n      });\n    }\n    setLoading_(false);\n  };\n  const verify = async () => {\n    setLoading_(true);\n    let _otp = inputvalue.trim();\n    if (variant == \"0\") {\n      await _verify({ email: email, token: _otp }).then((res) => {\n        toast(res.data.msg);\n        if (res.data.msg.trim() != \"Invalid Token\") {\n          setVerifying(true);\n          const predictionChannel = pusher.subscribe(`verifiction-${email}`);\n          predictionChannel.bind(\"verified\", async (data) => {\n            console.log(data);\n            const tempRpcData = {\n              userPublicAddress: \"\",\n              isWalletConnected: true,\n              username: \"\",\n              network: \"shasta\",\n            };\n            localStorage.setItem(\"userToken\", data.token);\n            tempRpcData.isWalletConnected = true;\n            tempRpcData.username = data._newUser.username;\n            tempRpcData.userPublicAddress = data._wallets.wallets[0]?.address;\n            tempRpcData.network = \"arbitrum\";\n            localStorage.setItem(\"rpcUserData\", JSON.stringify(tempRpcData));\n            localStorage.setItem(\"isNonWalletUser\", true);\n            localStorage.setItem(\n              \"rpcUserWallets\",\n              JSON.stringify(data._wallets.wallets)\n            );\n            const currentDate = new Date();\n            currentDate.setTime(currentDate.getTime() + 6 * 60 * 60 * 1000);\n            localStorage.setItem(\"rpcUserExpiresAt\", currentDate);\n            dispatchRPCData({ type: \"wallet-connect\", payload: tempRpcData });\n            setLoading_(false);\n            navigate(\"/\");\n            setVerifying(false);\n          });\n        }\n      });\n    }\n    if (variant == \"1\") {\n      await otplogin({ email: email, token: _otp })\n        .then(async (res) => {\n          if (res.data?.msg?.trim() != \"Invalid OTP\") {\n            const tempRpcData = {\n              userPublicAddress: \"\",\n              isWalletConnected: true,\n              username: \"\",\n              network: \"shasta\",\n            };\n            localStorage.setItem(\"userToken\", res.data.accessToken);\n            tempRpcData.isWalletConnected = true;\n            tempRpcData.username = res.data._user.username;\n            tempRpcData.userPublicAddress =\n              res.data._wallet.wallets[0]?.address;\n            tempRpcData.network = \"arbitrum\";\n            localStorage.setItem(\"rpcUserData\", JSON.stringify(tempRpcData));\n            localStorage.setItem(\n              \"rpcUserWallets\",\n              JSON.stringify(res.data._wallet.wallets)\n            );\n            localStorage.setItem(\"isNonWalletUser\", true);\n            const currentDate = new Date();\n            currentDate.setTime(currentDate.getTime() + 6 * 60 * 60 * 1000);\n            localStorage.setItem(\"rpcUserExpiresAt\", currentDate);\n            console.log(\"dispatchingg\");\n            dispatchRPCData({ type: \"wallet-connect\", payload: tempRpcData });\n            setLoading_(false);\n            navigate(\"/\");\n          }\n        })\n        .catch((err) => {\n          if (err.response) {\n            toast(err.response.data.msg);\n            setLoading_(false);\n          }\n        });\n    }\n  };\n  return (\n    <div className=\"signin__container\">\n      <div className=\"wrapper\">\n        <div className=\"signinhero__container\">\n          <h1>Welcome to our Community</h1>\n          <p>A whole new productive journey starts right here</p>\n        </div>\n        <div className=\"signinform__container\">\n          {!verifying ? (\n            !active ? (\n              <div className={`signin__form ${active ? \"active\" : \"\"}`}>\n                <div className=\"item\">\n                  <div>üì•Ô∏è Email</div>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Enter your email address\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n                <div className=\"recovery\">\n                  <div className=\"checkbox_container\">\n                    <input type=\"checkbox\" id=\"checkbox\" />\n                    <label htmlFor=\"checkbox\">Keep Me login</label>\n                  </div>\n                  <p>Recover Password</p>\n                </div>\n                <button onClick={() => handleSignIn()}>\n                  {_loading ? <img src={loader} /> : \"Authenticate\"}\n                </button>\n                <div className=\"continue\">\n                  <div>\n                    <span></span>\n                    <p>or Continue With</p>\n                    <span></span>\n                  </div>\n                  <p>\n                    <i className=\"ri-google-fill\"></i>\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <div className=\"otp__container\">\n                <div className=\"title\">\n                  <h3>OTP Verification</h3>\n                  <p>Enter OTP sent to {email}</p>\n                </div>\n\n                <div className=\"boxes\">\n                  <div className=\"box\">\n                    <input\n                      placeholder=\"Enter Code\"\n                      type=\"text\"\n                      maxLength={6}\n                      name={`input-otp`}\n                      value={inputvalue}\n                      onChange={(e) => {\n                        setInputValue(e.target.value);\n                      }}\n                      inputMode=\"numeric\"\n                      autoComplete=\"one-time-code\"\n                    />\n                  </div>\n                </div>\n\n                <p className=\"resend\">\n                  Didn't receive OTP ?{\" \"}\n                  <span\n                    onClick={() => {\n                      setActive(false), setInputValue(\"\");\n                    }}\n                  >\n                    Resend OTP\n                  </span>\n                </p>\n\n              <button onClick={()=>verify()}>\n                <p>\n                {\n                  _loading ? <img src={loader} /> : \"Confirm OTP\"\n                }\n                </p>\n                </button>\n              </div>\n            )\n          ) : (\n            <div>\n              <img src={loader} alt=\"loader\" />\n              <p>Setting up your account</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n"],"names":["authenticate","data","res","axios","_verify","otplogin","SignIn","navigate","useNavigate","active","setActive","React","inputvalue","setInputValue","email","setEmail","verifying","setVerifying","variant","setVariant","dispatchRPCData","useRPCContext","_loading","setLoading_","pusher","Pusher","ValidateEmail","mail","toast","handleSignIn","verify","_otp","tempRpcData","currentDate","err","jsxs","jsx","loader","e"],"mappings":"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"}