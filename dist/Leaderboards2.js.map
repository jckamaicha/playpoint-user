{"version":3,"file":"Leaderboards2.js","sources":["../src/components/Leaderboards/Leaderboards.jsx"],"sourcesContent":["import { Skeleton } from \"@mui/material\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getLeaderboardByMarketplaceSlug } from \"../../api/Leaderboards\";\n\nimport allFlags from \"../../helpers/CountryFlags.json\";\nimport { formatNumber } from \"../../utils/NumberFomatter\";\nimport GetFlags from \"../../utils/GetFlags\";\n\nexport const getCountryShortName = (country) => {\n  if (sessionStorage.getItem(\"marketplaceSlug\") != \"fifa-worldcup\")\n    return country;\n  let name = \"\";\n  allFlags.map((flag, key) => {\n    if (flag.name === country) {\n      name = flag.code;\n    } else if (country === \"USA\") {\n      name = \"USA\";\n    } else if (country === \"South Korea\" || country === \"Korea Republic\") {\n      name = \"KR\";\n    }\n  });\n  return name;\n};\n\nexport default function Leaderboards({ marketplaceSlug }) {\n  const navigate = useNavigate();\n  const [activeOS, setActiveOS] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(true);\n  const [leaderboards, setLeaderboards] = React.useState([]);\n\n  React.useEffect(() => {\n    // Windows\n    if (navigator.appVersion.indexOf(\"Win\") != -1) setActiveOS(\"windowsOS\");\n    // Mac\n    else if (navigator.appVersion.indexOf(\"Mac\") != -1) setActiveOS(\"macOS\");\n    // Linux and other\n    else setActiveOS(\"otherOS\");\n\n    // Fetch fixtures\n    (async () => {\n      if (marketplaceSlug !== \"\") {\n        sessionStorage.setItem(\"marketplaceSlug\", marketplaceSlug);\n        const data = await getLeaderboardByMarketplaceSlug(marketplaceSlug);\n        let _leaderboard = data.data.leaderboard;\n        setLeaderboards(_leaderboard);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <div className={`leaderboardItems ${activeOS}`}>\n      {leaderboards.length > 0 &&\n        !loading &&\n        leaderboards.map((leaderboard, key) => {\n          return (\n            <div\n              className=\"leaderboardItem__container\"\n              key={key}\n              onClick={() => {\n                navigate(`/predict/${leaderboard.fixture._id}`);\n              }}\n            >\n              <p>\n                {getCountryShortName(leaderboard.fixture.HomeTeam)}\n                {GetFlags(marketplaceSlug, leaderboard.fixture.HomeTeam)}\n                <span>vs</span>\n                {GetFlags(marketplaceSlug, leaderboard.fixture.AwayTeam)}\n                {getCountryShortName(leaderboard.fixture.AwayTeam)}\n              </p>\n              <p>{formatNumber(leaderboard.userCount)}</p>\n              <p>{formatNumber(leaderboard.volume)}</p>\n            </div>\n          );\n        })}\n      {leaderboards.length < 1 && !loading && (\n        <div className=\"leaderboardItem__container\">\n          <p style={{ color: \"#fff\" }}>Leaderboard Not Available!</p>\n        </div>\n      )}\n      {loading &&\n        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19].map(\n          (_, index) => {\n            return (\n              <div className=\"leaderboardItem__container\" key={index}>\n                <Skeleton width={70} height={30} />\n                <Skeleton width={70} height={30} />\n                <Skeleton width={70} height={30} />\n              </div>\n            );\n          }\n        )}\n    </div>\n  );\n}\n"],"names":["getCountryShortName","country","name","allFlags","flag","key","Leaderboards","marketplaceSlug","navigate","useNavigate","activeOS","setActiveOS","React","loading","setLoading","leaderboards","setLeaderboards","_leaderboard","getLeaderboardByMarketplaceSlug","jsxs","leaderboard","GetFlags","jsx","formatNumber","_","index","Skeleton"],"mappings":"+SASa,MAAAA,EAAuBC,GAAY,CAC1C,GAAA,eAAe,QAAQ,iBAAiB,GAAK,gBACxC,OAAAA,EACT,IAAIC,EAAO,GACF,OAAAC,EAAA,IAAI,CAACC,EAAMC,IAAQ,CACtBD,EAAK,OAASH,EAChBC,EAAOE,EAAK,KACHH,IAAY,MACdC,EAAA,OACED,IAAY,eAAiBA,IAAY,oBAC3CC,EAAA,KACT,CACD,EACMA,CACT,EAEwB,SAAAI,EAAa,CAAE,gBAAAC,GAAmB,CACxD,MAAMC,EAAWC,IACX,CAACC,EAAUC,CAAW,EAAIC,EAAM,SAAS,EAAE,EAC3C,CAACC,EAASC,CAAU,EAAIF,EAAM,SAAS,EAAI,EAC3C,CAACG,EAAcC,CAAe,EAAIJ,EAAM,SAAS,CAAA,CAAE,EAEzD,OAAAA,EAAM,UAAU,IAAM,CAEhB,UAAU,WAAW,QAAQ,KAAK,GAAK,GAAID,EAAY,WAAW,EAE7D,UAAU,WAAW,QAAQ,KAAK,GAAK,GAAIA,EAAY,OAAO,EAElEA,EAAY,SAAS,GAGzB,SAAY,CACX,GAAIJ,IAAoB,GAAI,CACX,eAAA,QAAQ,kBAAmBA,CAAe,EAErD,IAAAU,GADS,MAAMC,EAAgCX,CAAe,GAC1C,KAAK,YAC7BS,EAAgBC,CAAY,EAC5BH,EAAW,EAAK,CAClB,CAAA,IAEJ,EAAG,CAAE,CAAA,EAGFK,EAAA,MAAA,CAAI,UAAW,oBAAoBT,IACjC,SAAA,CAAaK,EAAA,OAAS,GACrB,CAACF,GACDE,EAAa,IAAI,CAACK,EAAaf,IAE3Bc,EAAC,MAAA,CACC,UAAU,6BAEV,QAAS,IAAM,CACJX,EAAA,YAAYY,EAAY,QAAQ,KAAK,CAChD,EAEA,SAAA,CAAAD,EAAC,IACE,CAAA,SAAA,CAAoBnB,EAAAoB,EAAY,QAAQ,QAAQ,EAChDC,EAASd,EAAiBa,EAAY,QAAQ,QAAQ,EACvDE,EAAC,QAAK,SAAE,IAAA,CAAA,EACPD,EAASd,EAAiBa,EAAY,QAAQ,QAAQ,EACtDpB,EAAoBoB,EAAY,QAAQ,QAAQ,CAAA,EACnD,EACCE,EAAA,IAAA,CAAG,SAAaC,EAAAH,EAAY,SAAS,EAAE,EACvCE,EAAA,IAAA,CAAG,SAAaC,EAAAH,EAAY,MAAM,EAAE,CAAA,CAAA,EAbhCf,CAAA,CAgBV,EACFU,EAAa,OAAS,GAAK,CAACF,KAC1B,MAAI,CAAA,UAAU,6BACb,SAAAS,EAAC,KAAE,MAAO,CAAE,MAAO,MAAO,EAAG,qCAA0B,CAAA,EACzD,EAEDT,GACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,EAAE,IAClE,CAACW,EAAGC,IAEAN,EAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAG,EAACI,EAAS,CAAA,MAAO,GAAI,OAAQ,GAAI,EAChCJ,EAAAI,EAAA,CAAS,MAAO,GAAI,OAAQ,GAAI,EAChCJ,EAAAI,EAAA,CAAS,MAAO,GAAI,OAAQ,GAAI,CAAA,CAAA,EAHcD,CAIjD,CAGN,CACJ,CAAA,CAAA,CAEJ"}