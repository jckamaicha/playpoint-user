{"version":3,"file":"style.js","sources":["../src/utils/RPC.js"],"sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { setProfile } from \"../api/Profile\";\nimport { useRPCContext } from \"../contexts/WalletRPC/RPCContext\";\nimport { ACTIONS } from \"../contexts/WalletRPC/RPCReducer\";\nconst { ethereum } = window;\nconst nonWallet = localStorage.getItem(\"isNonWalletUser\");\n\nexport const handleRPCWalletLogin = async () => {\n  // const navigate = useNavigate()\n  try {\n    await ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0xAA36A7\" }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    if (switchError.code === 4902) {\n      toast.error(\"Looks like we need to add sepolia test network.\");\n      try {\n        await ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: \"0xAA36A7\",\n              chainName: \"Sepolia Testnet\",\n              rpcUrls: [\"https://sepolia.infura.io/v3/\"] /* ... */,\n              nativeCurrency: {\n                name: \"Sepolia\",\n                symbol: \"ETH\",\n                decimals: 18,\n              },\n              blockExplorerUrls: [\"https://sepolia.etherscan.io\"],\n              iconUrls: [\"https://ethereum.org/en/\"],\n            },\n          ],\n        });\n      } catch (addError) {\n        console.log(addError);\n      }\n    }\n  }\n\n  try {\n    if (typeof ethereum !== \"undefined\") {\n      const userAddress = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      if (ethereum.isMetaMask)\n        console.log(\n          \"Metamask Says: Other EVM Compatible Wallets not detected!\"\n        );\n      else\n        console.log(\n          \"Metamask Says: Other EVM Compatible wallets maybe installed!\"\n        );\n\n      const tempRpcData = {\n        userPublicAddress: userAddress[0],\n        isWalletConnected: true,\n        username: \"\",\n        network: \"arbitrum\",\n        isNonWalletUser:false,\n      };\n      if (userAddress[0]) {\n        await setProfile({ data: tempRpcData }).then((res) => {\n          tempRpcData.username = res.data.profile.username;\n        });\n      }\n      const currentDate = new Date();\n      currentDate.setTime(currentDate.getTime() + 6 * 60 * 60 * 1000);\n      localStorage.setItem(\"rpcUserData\", JSON.stringify(tempRpcData));\n      localStorage.setItem(\"isRPCUserAuthenticated\", true);\n      localStorage.setItem(\"rpcUserExpiresAt\", currentDate);\n      return tempRpcData;\n    } else navigate(\"signin?ref=nometamask\");\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst url = window.location.protocol+\"//\"+window.location.host+window.location.pathname\n\n// export const getPPTTBalance = async (userAddress) => {};\n\nif (typeof ethereum !== \"undefined\" && !nonWallet) {\n  // @note - This is the main function that will be called from the frontend on account change on metamask\n  ethereum.on(\"accountsChanged\", async (accounts) => {\n    const tempRpcData = {\n      userPublicAddress: accounts[0],\n      isWalletConnected: true,\n      username: \"\",\n      network:\"arbitrum\"\n    };\n    if (accounts[0]) {\n      await setProfile({ data: tempRpcData }).then((res) => {\n        tempRpcData.username = res.data.profile.username;\n      });\n    }\n    const currentDate = new Date();\n    currentDate.setTime(currentDate.getTime() + 6 * 60 * 60 * 1000);\n    localStorage.setItem(\"rpcUserData\", JSON.stringify(tempRpcData));\n    localStorage.setItem(\"isRPCUserAuthenticated\", true);\n    localStorage.setItem(\"rpcUserExpiresAt\", currentDate);\n    console.log(url)\n    window.location.assign(url+\"?ref=switchAccount\")\n  });\n  ethereum.on(\"chainChanged\", (chainId) => {\n    window.location.reload();\n  });\n}\n\nexport const handleTRONWALLETLogin = async () => {\n  let tronExists = new Promise((resolve, reject) => {\n    let attempts = 0,\n      maxAttempts = 1000;\n    const checkTron = () => {\n      if (window.tronWeb) {\n        resolve(true);\n        return;\n      }\n      attempts++;\n      if (attempts >= maxAttempts) {\n        reject(false);\n        return;\n      }\n      setTimeout(checkTron, 100);\n    };\n    checkTron();\n  });\n\n  \n  const tempRpcData = {\n    userPublicAddress: \"\",\n    isWalletConnected: false,\n    username: \"\",\n    network: \"shasta\",\n    isNonWalletUser:false\n  };\n  \n  if (!tronExists) {\n    alert(\"Please login into Tronlink wallet extension!\");\n    return tempRpcData;\n  }\n\n  let tronWeb;\n  if (window.tronLink.ready) {\n    tronWeb = tronLink.tronWeb;\n  } else {\n    const res = await tronLink.request({ method: \"tron_requestAccounts\" });\n    if (res.code === 200) {\n      tronWeb = tronLink.tronWeb;\n    } else {\n      return toast(\"Make sure tronlink is unlocked!\");\n    }\n  }\n\n  await setProfile({ data: tempRpcData }).then((res) => {\n    tempRpcData.username = res.data.profile.username;\n  });\n  tempRpcData.userPublicAddress = tronWeb.defaultAddress.base58;\n  tempRpcData.isWalletConnected =true;\n  const currentDate = new Date();\n  currentDate.setTime(currentDate.getTime() + 6 * 60 * 60 * 1000);\n  localStorage.setItem(\"rpcUserExpiresAt\", currentDate);\n  localStorage.setItem(\"isRPCUserAuthenticated\", true);\n  localStorage.setItem(\"rpcUserData\", JSON.stringify(tempRpcData));\n  \n  return tempRpcData;\n};\n"],"names":["ethereum","nonWallet","handleRPCWalletLogin","switchError","toast","addError","userAddress","tempRpcData","setProfile","res","currentDate","error","url","accounts","chainId","handleTRONWALLETLogin","tronExists","resolve","reject","attempts","maxAttempts","checkTron","tronWeb"],"mappings":"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"}